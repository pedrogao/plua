Push 3
Push 1
Push 2

-- assumes [a, b, c] top of stack
Proc addMul
    Add -- 1 + 2
    Mul -- 3 * 3
    Ret
End

Proc square
    GetArg 0 -- 9
    Mul  -- 9 * 9
    Ret
End

PrintStack
Call addMul
PrintStack
Call square
PrintStack